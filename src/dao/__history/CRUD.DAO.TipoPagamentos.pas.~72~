unit CRUD.DAO.TipoPagamentos;

interface

uses
  CRUD.model.Conexao,
  CRUD.Interfaces.TipoPagamentos;

type
  TDAOTipoPGTO = class(TInterfacedObject, iDAOTipoPagamentos)
  private
  
  public
    constructor Create;
    destructor Destroy; override;
    class function New : iDAOTipoPagamentos;
    procedure CreateIdNome(aValue: iTipoPagamentos);
    procedure EditIdNome(aValue: iTipoPagamentos);
    procedure DeleteIdNome(aValue: string);
  end;

implementation

uses
  CRUD.model.PersisteDados, System.SysUtils, CRUD.Interfaces.IdNome;

{ TDAOTipoPGTO }

constructor TDAOTipoPGTO.Create;
begin

end;

procedure TDAOTipoPGTO.CreateIdNome(aValue: iTipoPagamentos);
var
lsql : string;
begin
    lsql := ' INSERT INTO TIPO_PAGAMANTOS VALUES (?,?) ';
    TPersistData.New(TConexao.New)
                .PrepareStatement(lsql)
                .SetValue(1, aValue.Nome).ExecSQL;
end;


procedure TDAOTipoPGTO.DeleteIdNome(aValue: string);
var
lsql : string;
begin
    lsql := ' DELETE FROM TIPO_PAGAMANTOS WHERE ID = :Id ';
    TPersistData.New(TConexao.New)
                .PrepareStatement(lsql)
                .AddParaments('id', aValue)
                .ExecSQL
end;

destructor TDAOTipoPGTO.Destroy;
begin

  inherited;
end;

procedure TDAOTipoPGTO.EditIdNome(aValue: iTipoPagamentos);
var
lsql : string;
begin

    lsql := ' UPDATE TIPO_PAGAMANTOS ' +
            ' SET TIPO_PAGAMANTOS.NOME = :Nome ' +
            ' WHERE TIPO_PAGAMANTOS.ID = :Id ';
    TPersistData.New(TConexao.New)
                .PrepareStatement(lsql)
                .AddParaments('Nome', aValue.Nome)
                .AddParaments('Id', aValue.Id)
                .ExecSQL 
end;

class function TDAOTipoPGTO.New: iDAOTipoPagamentos;
begin
  result := self.Create;
end;

end.
