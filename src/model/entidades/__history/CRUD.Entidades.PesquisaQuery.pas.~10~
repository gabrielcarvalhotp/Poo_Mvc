unit CRUD.Entidades.PesquisaQuery;

interface

uses
  CRUD.Interfaces.Conexao;

type
  TPesquisaQuery = class(TinterfacedObject, iPesquisaQuery)
    private
    FParent : iQuery;
    public
    constructor Create(aValue : iQuery);
    destructor Destroy; override;
    class function New(aValue : iQuery) : iPesquisaQuery;
    function Todos(aValue : string) : iPesquisaQuery;
  end;

implementation

{ TPesquisaQuery }

constructor TPesquisaQuery.Create(aValue: iQuery);
begin
  FParent := aValue;
end;

destructor TPesquisaQuery.Destroy;
begin

  inherited;
end;

class function TPesquisaQuery.New(aValue: iQuery): iPesquisaQuery;
begin
  result := self.Create(aValue);
end;

function TPesquisaQuery.Todos(aValue: string): iPesquisaQuery;
begin
  FParent.Close.Clear.SQL(aValue).Active;
end;

end.
