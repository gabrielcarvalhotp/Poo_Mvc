unit CRUD.model.Conexao;

interface

uses
  CRUD.model.Interfaces, Data.DB, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.FB, FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param,
  FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TConexao = class(TInterfacedObject, iConexao)
  private
    FConnection: TFDConnection;
  public
    { public }
    constructor Create;
    destructor Destroy; override;
    class function New: iConexao;
    function Conectar: TCustomConnection;
  end;

implementation

{ TConexao }

function TConexao.Conectar: TCustomConnection;
begin
  result := FConnection;
end;

constructor TConexao.Create;
begin
  FConnection := TFDConnection.Create(nil);
  FConnection.DriverName := 'FB';
  FConnection.Params.Database := 'C:\DB\DATABASETESTES.FDB';
  FConnection.Params.UserName := 'SYSDBA';
  FConnection.Params.Password := 'masterkey';
  FConnection.LoginPrompt := false;
  FConnection.Connected := true;
end;

destructor TConexao.Destroy;
begin
  inherited;
end;

class function TConexao.New: iConexao;
begin
  result := self.Create;
end;

end.
